/*This nested query is used to find the login ID for those salespeople that 
have over $1M in sales last year*/
SELECT  FIRSTNAME, LASTNAME
FROM    PERSON
WHERE   BUSINESSENTITYID IN (
    SELECT  BUSINESSENTITYID
    FROM    SALESPERSON
    WHERE   SALESLASTYEAR > 1000000);


SELECT  NAME
FROM    PRODUCT
WHERE   PRODUCTMODELID IN (
    SELECT      PRODUCTMODELID
    FROM        PRODUCTMODELPRODUCTDESCRIPTIONCULTURE
    WHERE       CULTUREID IN ('ar', 'fr'))
    ORDER BY    PRODUCTMODELID ; 
    
    
SELECT      p.BUSINESSENTITYID, p.STANDARDPRICE, v.NAME
FROM        PRODUCTVENDOR p
JOIN        VENDOR v 
ON          p.BUSINESSENTITYID = v.BUSINESSENTITYID  
WHERE       p.STANDARDPRICE > 45
ORDER BY    p.STANDARDPRICE;

SELECT      v.NAME, AVG(p.STANDARDPRICE) AS AvgPrice
FROM        PRODUCTVENDOR p
JOIN        VENDOR v 
ON          p.BUSINESSENTITYID = v.BUSINESSENTITYID  
WHERE       p.STANDARDPRICE > 45
GROUP BY    v.NAME
ORDER BY    AvgPrice DESC;


SELECT  NAME
FROM    PRODUCT
WHERE   PRODUCTID IN (

    SELECT      PRODUCTID
    FROM        SALESORDERDETAIL
    WHERE       SALESORDERID IN (
    
    SELECT      SALESORDERID
    FROM        SALESORDERDETAIL
    GROUP BY    SALESORDERID
    HAVING      COUNT (SALESORDERID) > 50 )) ;
    
    
SELECT      SUM(SALESLASTYEAR), TERRITORYID
FROM        SALESPERSON
GROUP BY    TERRITORYID
ORDER BY    TERRITORYID;
    
SELECT  TABLE_NAME, COLUMN_NAME
FROM    ALL_TAB_COLUMNS
WHERE   COLUMN_NAME = 'TERRITORYID';


    SELECT      SUM(sp.SALESLASTYEAR), sp.TERRITORYID, st.NAME, st.COUNTRYREGIONCODE 
    FROM        SALESPERSON sp
    JOIN        SALESTERRITORY st
    ON          sp.TERRITORYID = st.TERRITORYID
    GROUP BY    sp.TERRITORYID, st.NAME, st.COUNTRYREGIONCODE
    ORDER BY    SUM(sp.SALESLASTYEAR)
    
    SELECT      AVG(sp.SALESLASTYEAR), sp.TERRITORYID, st.NAME, st.COUNTRYREGIONCODE 
    FROM        SALESPERSON sp
    JOIN        SALESTERRITORY st
    ON          sp.TERRITORYID = st.TERRITORYID
    GROUP BY    sp.TERRITORYID, st.NAME, st.COUNTRYREGIONCODE
    ORDER BY    AVG(sp.SALESLASTYEAR) DESC
    
    CREATE OR REPLACE PROCEDURE GetTerAVGSales(sp.TERRITORYID IN NUMBER)
    IS
    BEGIN
    
        SELECT      AVG(sp.SALESLASTYEAR), sp.TERRITORYID, st.NAME, st.COUNTRYREGIONCODE 
        FROM        SALESPERSON sp
        LEFT JOIN   SALESTERRITORY st
        ON          sp.TERRITORYID = st.TERRITORYID
        GROUP BY    sp.TERRITORYID, st.NAME, st.COUNTRYREGIONCODE
        
    END     GetTerAVGSales
    
    EXEC    GetTerAVGSales(4)

    
    SELECT      p.FIRSTNAME, p.LASTNAME, sp.BUSINESSENTITYID, sp.SALESLASTYEAR,
    RANK () OVER (ORDER BY SALESLASTYEAR DESC) AS SalesRank
    FROM        SALESPERSON sp
    LEFT JOIN   PERSON p
    ON          sp.BUSINESSENTITYID = p.BUSINESSENTITYID;
    
